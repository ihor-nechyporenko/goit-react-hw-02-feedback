{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","FeedbackOptions","onLeaveFeedback","options","map","option","type","className","styles","button","onClick","value","Statistics","good","neutral","bad","total","positivePercentage","title","stat","Section","children","section","defaultProps","Notification","message","App","state","leaveFeedback","e","currentTarget","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,2BAA2B,MAAQ,0BAA0B,KAAO,2B,mBCA7FD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,QAAU,gC,uICwB/CC,EArBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,QAApB,OACtB,mCACGA,EAAQC,KAAI,SAAAC,GAAM,OACjB,wBACEC,KAAK,SAELC,UAAWC,IAAOC,OAClBC,QAASR,EACTS,MAAON,EALT,SAMGA,GAJIA,S,gBCcEO,EAnBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qCACE,oBAAIV,UAAWC,IAAOU,MAAtB,wBACA,oBAAGX,UAAWC,IAAOW,KAArB,mBAAkCN,KAClC,oBAAGN,UAAWC,IAAOW,KAArB,sBAAqCL,KACrC,oBAAGP,UAAWC,IAAOW,KAArB,kBAAiCJ,KACjC,oBAAGR,UAAWC,IAAOW,KAArB,oBAAmCH,KACnC,oBAAGT,UAAWC,IAAOW,KAArB,gCAA+CF,EAA/C,W,gBCPEG,EAAU,SAAC,GAAD,IAAGF,EAAH,EAAGA,MAAOG,EAAV,EAAUA,SAAV,OACd,sBAAKd,UAAWC,IAAOc,QAAvB,UACE,oBAAIf,UAAWC,IAAOU,MAAtB,SAA8BA,IAC7BG,MAILD,EAAQG,aAAe,CACrBL,MAAO,IAOME,Q,iBCfTI,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mCACE,mBAAGlB,UAAWC,IAAOiB,QAArB,SAA+BA,OAInCD,EAAaD,aAAe,CAC1BE,QAAS,IAOID,QCkDAE,E,4MA5DbC,MAAQ,CACNd,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPa,cAAgB,SAACC,GACf,IAAQlB,EAAUkB,EAAEC,cAAZnB,MAER,EAAKoB,UAAS,SAAAC,GAAS,sBACpBrB,EAAQqB,EAAWrB,GAAS,O,EAIjCsB,mBAAqB,WACnB,MAA+B,EAAKN,MAEpC,OAFA,EAAQd,KAAR,EAAcC,QAAd,EAAuBC,K,EAKzBmB,gCAAkC,WAChC,MAA+B,EAAKP,MAA5Bd,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OAAOF,EAAOC,EAAUC,IAAQ,EAC5B,EACAoB,KAAKC,MAAOvB,GAAQA,EAAOC,EAAUC,GAAQ,M,4CAGnD,WACE,MAA+BsB,KAAKV,MAA5Bd,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBZ,EAAUmC,OAAOC,KAAKF,KAAKV,OAE3BV,EAAqBoB,KAAKH,kCAC1BlB,EAAQqB,KAAKJ,qBAEnB,OACE,eAAC,EAAD,CAASf,MAAM,wBAAf,UACE,cAAC,EAAD,CACEhB,gBAAiBmC,KAAKT,cACtBzB,QAASA,IAGVU,EAAOC,EAAUC,IAAQ,GACxB,cAAC,EAAD,CAAcU,QAAQ,sBAGvBZ,EAAOC,EAAUC,EAAM,GACtB,cAAC,EAAD,CACEF,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,W,GArDduB,aCHlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1B9C,EAAOC,QAAU,CAAC,KAAO,2BAA2B,QAAU,yBAAyB,MAAQ,yB,kBCA/FD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,eAAe,SAAS,cAAc,oBAAoB,iBAAiB,OAAO,OAAS,mC","file":"static/js/main.619d7785.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"font\":\"'Roboto Mono', monospace\",\"title\":\"Statistics_title__ZVci3\",\"stat\":\"Statistics_stat__WDaMI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"font\":\"'Roboto Mono', monospace\",\"message\":\"Notification_message__13S_D\"};","import PropTypes from 'prop-types';\n\nimport styles from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ onLeaveFeedback, options }) => (\n  <>\n    {options.map(option => (\n      <button\n        type=\"button\"\n        key={option}\n        className={styles.button}\n        onClick={onLeaveFeedback}\n        value={option}>\n        {option}\n      </button>\n    ))\n    }\n  </>\n);\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nimport styles from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <>\n    <h2 className={styles.title}>Statistics</h2>\n    <p className={styles.stat}>Good: {good}</p>\n    <p className={styles.stat}>Neutral: {neutral}</p>\n    <p className={styles.stat}>Bad: {bad}</p>\n    <p className={styles.stat}>Total: {total}</p>\n    <p className={styles.stat}>Positive feedback: {positivePercentage}%</p>\n  </>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\n\nimport styles from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <div className={styles.section}>\n    <h1 className={styles.title}>{title}</h1>\n    {children}\n  </div>\n);\n\nSection.defaultProps = {\n  title: '',\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\n\nimport styles from './Notification.module.css';\n\nconst Notification = ({ message }) => (\n  <>\n    <p className={styles.message}>{message}</p>\n  </>\n);\n\nNotification.defaultProps = {\n  message: '',\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import { Component } from 'react';\n\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  leaveFeedback = (e) => {\n    const { value } = e.currentTarget;\n\n    this.setState(prevState => ({\n      [value]: prevState.[value] + 1,\n    }))\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good, neutral, bad } = this.state;\n\n    return good + neutral + bad === 0\n      ? 0\n      : Math.round((good / (good + neutral + bad)) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const options = Object.keys(this.state);\n\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    const total = this.countTotalFeedback();\n\n    return (\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          onLeaveFeedback={this.leaveFeedback}\n          options={options}\n        />\n\n        {good + neutral + bad === 0 && (\n          <Notification message=\"No feedback given\"></Notification>\n        )}\n\n        {good + neutral + bad > 0 && (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        )}\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"font\":\"'Roboto Mono', monospace\",\"section\":\"Section_section__1XtUx\",\"title\":\"Section_title__2KPh4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"font\":\"'Roboto Mono', monospace\",\"accent-color\":\"orchid\",\"hover-color\":\"rgb(179, 92, 176)\",\"btn-text-color\":\"#fff\",\"button\":\"FeedbackOptions_button__1UKZ1\"};"],"sourceRoot":""}